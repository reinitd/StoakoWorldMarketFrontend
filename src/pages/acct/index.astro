---
import Layout from "../../layouts/Layout.astro";
---

<Layout
    title="WorldMarket by Stoako"
    description="WorldMarket by Stoako is a platform for trading. Trading, made easy."
    links={[{ rel: "stylesheet", href: "/styles/acct.css" }]}
    dimpath={["acct"]}
>
    <div id="settings-wrapper" class="content border-vertical">
        <div id="loading">
            <span id="spinner">
                <i
                    class="bx bx-refresh"
                    style="color:#ffffff; font-size: 10rem; animation: spin-cc 3s cubic-bezier(.17,.67,.52,1.52) infinite"
                ></i>
            </span>
        </div>
        <div class="flex-col" style="gap: .5rem; height: 100%;">
            <span
                class="flex-row"
                style="justify-content: space-around; margin-top: .25rem; padding-bottom: .5rem; border-bottom: 1px solid var(--c-border);"
            >
                <a href="/acct/edit">Edit Account</a>
                <a href="/acct/vl">View Listings</a>
                <a href="/logout" style="color: rgb(255, 61, 0);">Log out</a>
            </span>
            <div id="settings" class="flex-row">
                <div>
                    <h1>Hello, <span class="js-username-here"></span>!</h1>
                    <table id="user-info-table">
                        <tbody>
                            <tr>
                                <th>UUID</th>
                                <td class="js-uuid-here"></td>
                            </tr>
                            <tr>
                                <th>Affiliation</th>
                                <td class="js-nation-affiliation-here"></td>
                            </tr>
                            <tr>
                                <th>Location</th>
                                <td class="js-location-here"></td>
                            </tr>
                            <tr>
                                <th>Items Sold</th>
                                <td class="js-items-sold-here"></td>
                            </tr>
                            <tr>
                                <th>Joined WM</th>
                                <td class="js-joindate-here"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <img id="js-head-img" alt="MC Head" />
            </div>
        </div>
    </div>
</Layout>

<script is:inline src="/js/result.js"></script>
<script is:inline src="/js/helpers.js"></script>
<script is:inline src="/js/pages/acct.js"></script>
<script is:inline src="/js/populate/userInfo.js"></script>
<script is:inline src="/js/cookies.js"></script>
<script is:inline src="/js/database/user.js"></script>
<script is:inline src="/js/database/catalogEntry.js"></script>

<script>
    // import { getCookieValue } from "../../lib/cookies";
    // import { WMJWTDecode } from "../../lib/cookies";
    // import { populateUserInfo } from "../../lib/populate/userInfo";
    // import { confirmLeave } from "../../lib/global";
    // import { isEmpty } from "../../lib/helpers";
    // import { showModal } from "../../lib/modal";
    // import { getParamFromUrl } from "../../lib/helpers";
    // import { makeVlCeHtml } from "../../lib/helpers";
    // import { User } from "../../lib/database/user";
    // import { updateUser } from "../../lib/database/user";
    // import { fetchCatalogEntriesFromSeller } from "../../lib/database/catalogEntry";

    // document.addEventListener("DOMContentLoaded", async function () {
    //     const apiKey = getCookieValue("WORLDMARKETAPIKEY");
    //     if (apiKey == null) {
    //         window.location.replace(
    //             "https://mc-auth.com/oAuth2/authorize?client_id=3407823596079285374&redirect_uri=https%3A%2F%2Fwm.stoako.com%2Flogin&scope=profile&response_type=code",
    //         );
    //     }

    //     const loadingScreen = document.getElementById("loading");
    //     const spinner = document.getElementById("spinner");

    //     const jwt = WMJWTDecode(apiKey);
    //     document
    //         .getElementById("js-head-img")
    //         .setAttribute(
    //             "src",
    //             `https://crafatar.com/avatars/${jwt.payload.uuid}.png`,
    //         );

    //     const populateUserResult = await populateUserInfo(jwt.payload.uuid);
    //     if (!populateUserResult.success) {
    //         spinner.remove();
    //         const warning = document.createElement("p");
    //         warning.innerHTML = `There's been an error fetching your user data.<br/><br/><code>${populateUserResult.message}</code>`;
    //         warning.style.padding = "1rem";
    //         loadingScreen.appendChild(warning);
    //         return;
    //     }

    //     const user = populateUserResult.value;
    //     const pathname = this.location.pathname.toLowerCase();

    //     if (pathname == "/acct/edit") {
    //         confirmLeave();
    //         await handleEdit(user, apiKey);
    //     } else if (pathname == "/acct/vl") {
    //         await handleVL(apiKey);
    //     }

    //     loadingScreen.remove();
    // });

    // export async function handleEdit(user: User, apiKey: string) {
    //     const nationAffiliationInput = document.getElementById(
    //         "js-nation-affiliation-input",
    //     ) as HTMLInputElement;
    //     const locationInput = document.getElementById(
    //         "js-location-input",
    //     ) as HTMLInputElement;
    //     const submit = document.getElementById("js-submit-edits");

    //     //@ts-ignore
    //     tippy(nationAffiliationInput, {
    //         content: "Your nation or political entity.",
    //         placement: "top",
    //     });
    //     //@ts-ignore
    //     tippy(locationInput, {
    //         content: "Where you buy or sell from.",
    //         placement: "top",
    //     });

    //     nationAffiliationInput.setAttribute("value", user.nationAffiliation);
    //     nationAffiliationInput.setAttribute(
    //         "placeholder",
    //         user.nationAffiliation,
    //     );
    //     locationInput.setAttribute("value", user.location);
    //     locationInput.setAttribute("placeholder", user.location);

    //     submit.addEventListener("click", async () => {
    //         if (isEmpty(nationAffiliationInput.value)) {
    //             nationAffiliationInput.value = user.nationAffiliation;
    //         }

    //         if (isEmpty(locationInput.value)) {
    //             locationInput.value = user.location;
    //         }

    //         user.nationAffiliation = nationAffiliationInput.value.trim();
    //         user.location = locationInput.value.trim();

    //         const updateRes = await updateUser(user, apiKey);
    //         showModal({
    //             title: updateRes.success ? "Success" : "Uh oh.",
    //             content: updateRes.message,
    //         });
    //     });
    // }

    // export async function handleVL(apiKey: string) {
    //     const jwt = WMJWTDecode(apiKey);
    //     const searchResults = document.getElementById("search-results");
    //     const pageBack = document.getElementById("js-page-back");
    //     const pageForward = document.getElementById("js-page-forward");
    //     const loadingScreen = document.getElementById("loading");
    //     const spinner = document.getElementById("spinner");
    //     const filter = {
    //         showOnlyActive: document.getElementById(
    //             "js-filter-show-only-active",
    //         ) as HTMLInputElement,
    //         showOnlyInactive: document.getElementById(
    //             "js-filter-show-only-inactive",
    //         ) as HTMLInputElement,
    //         clear: document.getElementById("js-clear-filter"),
    //         apply: document.getElementById("js-apply-filter"),
    //     };

    //     const pageNumber: number =
    //         (getParamFromUrl("pagenumber", Number) as number) ?? 1;
    //     const pageAmount: number =
    //         (getParamFromUrl("pageamount", Number) as number) ?? 20;

    //     const fShowOnlyActive =
    //         (getParamFromUrl("fshowonlyactive", Boolean) as boolean) ?? false;
    //     const fShowOnlyInactive =
    //         (getParamFromUrl("fshowonlyinactive", Boolean) as boolean) ?? false;

    //     fShowOnlyActive && (filter.showOnlyActive.checked = fShowOnlyActive);
    //     fShowOnlyInactive &&
    //         (filter.showOnlyInactive.checked = fShowOnlyInactive);

    //     filter.clear.onclick = () => {
    //         location.href = `/acct/vl?pageNumber=${pageNumber}&pageAmount=${pageAmount}`;
    //     };
    //     filter.apply.onclick = () => {
    //         const currentFSOA = filter.showOnlyActive.checked;
    //         const currentFSOI = filter.showOnlyInactive.checked;

    //         let filters = [];

    //         if (currentFSOA) {
    //             filters.push([
    //                 "fshowonlyactive",
    //                 encodeURIComponent(currentFSOA),
    //             ]);
    //         }
    //         if (currentFSOI) {
    //             filters.push([
    //                 "fshowonlyinactive",
    //                 encodeURIComponent(currentFSOI),
    //             ]);
    //         }

    //         let fUrl = `/acct/vl?pageNumber=${encodeURIComponent(pageNumber)}&pageAmount=${encodeURIComponent(pageAmount)}`;
    //         filters.forEach((f) => {
    //             fUrl += `&${f[0]}=${encodeURIComponent(f[1])}`;
    //         });

    //         location.href = fUrl;
    //     };

    //     document.getElementById("js-page-number").textContent =
    //         pageNumber.toString();

    //     const res = await fetchCatalogEntriesFromSeller(
    //         jwt.payload.uuid,
    //         pageNumber,
    //         pageAmount,
    //         fShowOnlyActive,
    //         fShowOnlyInactive,
    //         apiKey,
    //     );

    //     if (!res.success) {
    //         const warning = document.createElement("p");
    //         warning.innerHTML = `There's been an error fetching the search result data.<br/><br/><code>${res.message}</code>`;
    //         warning.style.padding = "1rem";
    //         searchResults.parentElement.parentElement.prepend(warning);
    //         document.getElementById("js-search-results-table").remove();
    //         loadingScreen.remove();
    //         throw new Error(`Error when fetching data: ${res.message}`);
    //     }

    //     res.value.forEach(async (ce) => {
    //         const tr = await makeVlCeHtml(ce);
    //         searchResults.appendChild(tr);
    //     });

    //     const nextPageRes = await fetchCatalogEntriesFromSeller(
    //         jwt.payload.uuid,
    //         pageNumber + 1,
    //         pageAmount,
    //         fShowOnlyActive,
    //         fShowOnlyInactive,
    //         apiKey,
    //     );
    //     if (pageNumber <= 1) {
    //         pageBack.style.cursor = "not-allowed";
    //     } else {
    //         pageBack.onclick = () => {
    //             if (pageNumber - 1 > 0) {
    //                 location.href = `/acct/vl?pageNumber=${pageNumber - 1}&pageAmount=${pageAmount}&showOnlyActive=${fShowOnlyActive}&showOnlyInactive=${fShowOnlyInactive}`;
    //             }
    //         };
    //     }

    //     if (
    //         searchResults.children.length < 20 &&
    //         (nextPageRes.value == null || nextPageRes.value.length == 0)
    //     ) {
    //         pageForward.style.cursor = "not-allowed";
    //     } else {
    //         pageForward.onclick = () => {
    //             location.href = `/acct/vl?pageNumber=${pageNumber + 1}&pageAmount=${pageAmount}&showOnlyActive=${fShowOnlyActive}&showOnlyInactive=${fShowOnlyInactive}`;
    //         };
    //     }

    //     const sortTable = (
    //         attribute: string,
    //         ascending = true,
    //         isNumeric = true,
    //         isAttribute = false,
    //     ) => {
    //         let rowsArray = Array.from(
    //             searchResults.getElementsByTagName("tr"),
    //         );

    //         rowsArray.sort((a, b) => {
    //             let valueA, valueB;
    //             if (isAttribute) {
    //                 valueA = a.getAttribute(attribute);
    //                 valueB = b.getAttribute(attribute);
    //             } else {
    //                 valueA = a.querySelector(attribute).textContent;
    //                 valueB = b.querySelector(attribute).textContent;
    //             }

    //             if (isNumeric) {
    //                 valueA = Number(valueA);
    //                 valueB = Number(valueB);
    //             }

    //             if (ascending) {
    //                 return valueA - valueB;
    //             } else {
    //                 return valueB - valueA;
    //             }
    //         });

    //         rowsArray.forEach((row) => searchResults.appendChild(row));
    //     };

    //     // document.getElementById('js-sort-by-price-cheapest').onclick = () => {
    //     //     sortTable('.ce-payment-price', true);
    //     // };

    //     // document.getElementById('js-sort-by-price-expensive').onclick = () => {
    //     //     sortTable('.ce-payment-price', false);
    //     // };

    //     document.getElementById("js-sort-by-creation-latest").onclick = () => {
    //         sortTable("data-creation", false, true, true);
    //     };

    //     document.getElementById("js-sort-by-creation-oldest").onclick = () => {
    //         sortTable("data-creation", true, true, true);
    //     };

    //     document.getElementById("js-sort-by-quantity-most").onclick = () => {
    //         sortTable(".ce-quantity", false);
    //     };

    //     document.getElementById("js-sort-by-quantity-least").onclick = () => {
    //         sortTable(".ce-quantity", true);
    //     };

    //     loadingScreen.remove();
    // }
</script>
